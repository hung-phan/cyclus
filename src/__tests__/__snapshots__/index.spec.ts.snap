// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cyclus async should wait for start or stop method to resolve 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "component2",
        "component1",
        "component3",
      ],
    },
  },
  "map": Object {
    "component1": Component1 {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
    },
    "component2": Component2 {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
    },
    "component3": Component3 {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "component1": "component1",
          "component2": "component2",
        },
        "state": "start",
      },
      "component1": Component1 {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
      },
      "component2": Component2 {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
      },
    },
  },
}
`;

exports[`cyclus async should wait for start or stop method to resolve 2`] = `
Array [
  "Start component 2 after 2000",
  "Start component 1 after 1000",
  "Start component 3",
]
`;

exports[`cyclus injecting dependencies correctly should work with map 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "sched",
        "db",
        "exampleComponent",
      ],
    },
  },
  "map": Object {
    "db": Database {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "dbConnection": "OPENED",
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "db",
          "scheduler": "sched",
        },
        "state": "start",
      },
      "database": Database {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "dbConnection": "OPENED",
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "tick": 10,
      },
    },
    "sched": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "tick": 10,
    },
  },
}
`;

exports[`cyclus lifecycle should start the system in order 1`] = `
Array [
  "Start DummyComponent",
  "Start Scheduler",
  "Start Database",
  "Start ExampleComponent",
]
`;

exports[`cyclus lifecycle should stop the system in reversed order 1`] = `
Array [
  "Start DummyComponent",
  "Start Scheduler",
  "Start Database",
  "Start ExampleComponent",
  "Stop ExampleComponent",
  "Stop Database",
  "Stop Scheduler",
]
`;

exports[`cyclus lifecycle starting should be idempotent 1`] = `
Array [
  "Start DummyComponent",
  "Start Scheduler",
  "Start Database",
  "Start ExampleComponent",
]
`;

exports[`cyclus lifecycle stopping should be idempotent 1`] = `
Array [
  "Start DummyComponent",
  "Start Scheduler",
  "Start Database",
  "Start ExampleComponent",
  "Stop ExampleComponent",
  "Stop Database",
  "Stop Scheduler",
]
`;

exports[`cyclus replacing dependencies on the fly should replace but not start or stop any component 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {},
  },
  "map": Object {
    "database": Database {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "stop",
      },
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "database",
          "scheduler": "scheduler",
        },
        "state": "stop",
      },
      "database": Database {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "stop",
        },
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "stop",
        },
      },
    },
    "scheduler": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "stop",
      },
    },
  },
}
`;

exports[`cyclus replacing dependencies on the fly should replace but not start or stop any component 2`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {},
  },
  "map": Object {
    "database": NewDatabase {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "stop",
      },
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "database",
          "scheduler": "scheduler",
        },
        "state": "stop",
      },
      "database": NewDatabase {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "stop",
        },
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "stop",
        },
      },
    },
    "scheduler": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "stop",
      },
    },
  },
}
`;

exports[`cyclus replacing dependencies on the fly should replace but not start or stop any component 3`] = `Array []`;

exports[`cyclus replacing dependencies on the fly should restart correctly 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "scheduler",
        "database",
        "exampleComponent",
      ],
    },
  },
  "map": Object {
    "database": Database {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "dbConnection": "OPENED",
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "database",
          "scheduler": "scheduler",
        },
        "state": "start",
      },
      "database": Database {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "dbConnection": "OPENED",
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "tick": 10,
      },
    },
    "scheduler": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "tick": 10,
    },
  },
}
`;

exports[`cyclus replacing dependencies on the fly should restart correctly 2`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "scheduler",
        "database",
        "exampleComponent",
      ],
    },
  },
  "map": Object {
    "database": NewDatabase {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "dbConnection": "OPENED",
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "database",
          "scheduler": "scheduler",
        },
        "state": "start",
      },
      "database": NewDatabase {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "dbConnection": "OPENED",
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "tick": 10,
      },
    },
    "scheduler": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "tick": 10,
    },
  },
}
`;

exports[`cyclus replacing dependencies on the fly should restart correctly 3`] = `
Array [
  "Start Scheduler",
  "Start Database",
  "Start ExampleComponent",
  "Stop Database",
  "Start NewDatabase",
]
`;

exports[`cyclus replacing dependencies on the fly should stop components in 'shouldStop' attribute 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "scheduler",
        "database",
        "exampleComponent",
      ],
    },
  },
  "map": Object {
    "database": Database {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "dbConnection": "OPENED",
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "database",
          "scheduler": "scheduler",
        },
        "state": "start",
      },
      "database": Database {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "dbConnection": "OPENED",
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "tick": 10,
      },
    },
    "scheduler": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "tick": 10,
    },
  },
}
`;

exports[`cyclus replacing dependencies on the fly should stop components in 'shouldStop' attribute 2`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "scheduler",
        "database",
        "exampleComponent",
      ],
    },
  },
  "map": Object {
    "database": NewDatabase {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "dbConnection": "OPENED",
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "database",
          "scheduler": "scheduler",
        },
        "state": "start",
      },
      "database": NewDatabase {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "dbConnection": "OPENED",
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "tick": 10,
      },
    },
    "scheduler": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "tick": 10,
    },
  },
}
`;

exports[`cyclus replacing dependencies on the fly should stop components in 'shouldStop' attribute 3`] = `
Array [
  "Start Scheduler",
  "Start Database",
  "Start ExampleComponent",
  "Stop Database",
  "Stop Scheduler",
  "Start Scheduler",
  "Start NewDatabase",
]
`;

exports[`cyclus replacing dependencies on the fly should work for some components that are not in system before 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "emailService",
        "scheduler",
        "newExampleComponent",
        "database",
        "exampleComponent",
      ],
    },
  },
  "map": Object {
    "database": Database {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "dbConnection": "OPENED",
    },
    "emailService": EmailService {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
    },
    "exampleComponent": ExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "database": "database",
          "scheduler": "scheduler",
        },
        "state": "start",
      },
      "database": Database {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "dbConnection": "OPENED",
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "tick": 10,
      },
    },
    "newExampleComponent": NewExampleComponent {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "emailService": "emailService",
          "scheduler": "scheduler",
        },
        "state": "start",
      },
      "emailService": EmailService {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
      },
      "scheduler": Scheduler {
        "__cyclusMetadata": Object {
          "dependencies": Object {},
          "state": "start",
        },
        "tick": 10,
      },
    },
    "scheduler": Scheduler {
      "__cyclusMetadata": Object {
        "dependencies": Object {},
        "state": "start",
      },
      "tick": 10,
    },
  },
}
`;

exports[`cyclus replacing dependencies on the fly should work for some components that are not in system before 2`] = `
Array [
  "Start Scheduler",
  "Start Database",
  "Start ExampleComponent",
  "Start EmailService",
  "Start NewExampleComponent",
]
`;

exports[`cyclus replacing dependencies on the fly should work for test use case 1`] = `
Array [
  "Start Scheduler",
  "Start NewDatabase",
  "Start ExampleComponent",
]
`;

exports[`cyclus simple component should able to replace the config on the fly 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {},
  },
  "map": Object {
    "component": Component {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "config": "config",
        },
        "state": "start",
      },
      "config": Object {
        "c": 3,
        "d": 4,
      },
    },
    "config": Object {
      "c": 3,
      "d": 4,
    },
  },
}
`;

exports[`cyclus simple component should work correctly 1`] = `
SystemMap {
  "__metadata": Object {
    "cache": Object {
      "@cyclus/SystemMap/BUILT_ORDER": Array [
        "config",
        "component",
      ],
    },
  },
  "map": Object {
    "component": Component {
      "__cyclusMetadata": Object {
        "dependencies": Object {
          "config": "config",
        },
        "state": "start",
      },
      "config": Object {
        "a": 1,
        "b": 2,
      },
    },
    "config": Object {
      "a": 1,
      "b": 2,
    },
  },
}
`;
